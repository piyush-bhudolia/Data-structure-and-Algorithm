here ww are going to see code of merging two sorted arrays in O(n) space and o(1) space
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode first =l1;
        if(l1==null){
            return l2;
        }
        if(l2==null)
            return l1;
        ListNode second =l2;
        ListNode head=new ListNode(0);
        ListNode current = head;
        while(first !=null && second !=null ){
            
            if(first.val<=second.val){
                current.next=first;
                current=current.next;
                first = first.next;
            }
            else {
                current.next  =second;
                current=current.next;
                 second = second.next;
           }
        }
        while(first!=null){
             current.next=first;
                current=current.next;
                first = first.next;
        }
        while(second !=null){
            current.next = second;
                current=current.next;
                second = second.next;
        }
    }
}



in constant space
https://youtu.be/vt4jX0iRgCghttps://youtu.be/vt4jX0iRgCghttps://youtu.be/vt4jX0iRgCghttps://youtu.be/vt4jX0iRgCg
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        
        if(list1==null ||list2==null)
            return (list1!=null)?list1:list2;
        
        ListNode first = list1;
        ListNode second =list2;
        ListNode dummy = new ListNode(0);
        ListNode prev = dummy;
        
        while(first !=null && second !=null){
            if(first.val<second.val){
                prev.next = first;
                first = first.next;
            }
            else{
                prev.next = second;
                second = second.next;
            }
            prev = prev .next;
        }
        prev.next =first!=null?first:second;
        return dummy.next;
            
        
    }
}
https://youtu.be/mBUcaPvEawI for reference peepcoding
